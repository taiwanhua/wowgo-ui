import { IcssTaggedTemplateObject, IcssTaggedTemplateObjectWithDomKey } from "wowgo-utils";
import { IinitialUiStore } from "../Context/Context";

/**
 * 作為 :
 * - Base 組件的 props 介面，供繼承後使用
 */
export interface IBaseComponentProps {
    theme?: (style: IcssTaggedTemplateObject, uiStore: IinitialUiStore, porpsFromDom: any, utils: any) => IcssTaggedTemplateObject;
    // disabled?: boolean;
    className?: string;
    children?: React.ReactNode;
    uiStore?: any;
    prefixCls?: string;
    [key: string]: any;
}

/**
 * 作為 :
 * - Composite(合成) 組件的 props 介面，供繼承後使用
 */
export interface ICompositeComponentProps<S extends IcssTaggedTemplateObjectWithDomKey> {
    theme?: (style: S, uiStore: IinitialUiStore, porpsFromDom: any, utils: any) => S;
    // disabled?: boolean;
    className?: string;
    children?: React.ReactNode;
    uiStore?: any;
    prefixCls?: string;
    classNamesAppend?: string;
    [key: string]: any;
}


/**
 * div Html 屬性
 */
export interface IDivHTMLAttr {
    accessKey?: any;
    align?: any;
    ariaAtomic?: any;
    ariaAutoComplete?: any;
    ariaBusy?: any;
    ariaChecked?: any;
    ariaColCount?: any;
    ariaColIndex?: any;
    ariaColSpan?: any;
    ariaCurrent?: any;
    ariaDescription?: any;
    ariaDisabled?: any;
    ariaExpanded?: any;
    ariaHasPopup?: any;
    ariaHidden?: any;
    ariaKeyShortcuts?: any;
    ariaLabel?: any;
    ariaLevel?: any;
    ariaLive?: any;
    ariaModal?: any;
    ariaMultiLine?: any;
    ariaMultiSelectable?: any;
    ariaOrientation?: any;
    ariaPlaceholder?: any;
    ariaPosInSet?: any;
    ariaPressed?: any;
    ariaReadOnly?: any;
    ariaRelevant?: any;
    ariaRequired?: any;
    ariaRoleDescription?: any;
    ariaRowCount?: any;
    ariaRowIndex?: any;
    ariaRowSpan?: any;
    ariaSelected?: any;
    ariaSetSize?: any;
    ariaSort?: any;
    ariaValueMax?: any;
    ariaValueMin?: any;
    ariaValueNow?: any;
    ariaValueText?: any;
    assignedSlot?: any;
    attributeStyleMap?: any;
    attributes?: any;
    autocapitalize?: any;
    autofocus?: any;
    baseURI?: any;
    childElementCount?: any;
    childNodes?: any;
    children?: React.ReactNode;
    classList?: any;
    className?: string;
    clientHeight?: any;
    clientLeft?: any;
    clientTop?: any;
    clientWidth?: any;
    contentEditable?: any;
    dataset?: any;
    dir?: any;
    draggable?: any;
    elementTiming?: any;
    enterKeyHint?: any;
    firstChild?: any;
    firstElementChild?: any;
    hidden?: any;
    id?: any;
    innerHTML?: any;
    innerText?: any;
    inputMode?: any;
    isConnected?: any;
    isContentEditable?: any;
    lang?: any;
    lastChild?: any;
    lastElementChild?: any;
    localName?: any;
    namespaceURI?: any;
    nextElementSibling?: any;
    nextSibling?: any;
    nodeName?: any;
    nodeType?: any;
    nodeValue?: any;
    nonce?: any;
    offsetHeight?: any;
    offsetLeft?: any;
    offsetParent?: any;
    offsetTop?: any;
    offsetWidth?: any;
    onabort?: any;
    onanimationend?: any;
    onanimationiteration?: any;
    onanimationstart?: any;
    onauxclick?: any;
    onbeforecopy?: any;
    onbeforecut?: any;
    onbeforepaste?: any;
    onbeforexrselect?: any;
    onblur?: any;
    oncancel?: any;
    oncanplay?: any;
    oncanplaythrough?: any;
    onchange?: any;
    onclick?: any;
    onclose?: any;
    oncontextmenu?: any;
    oncopy?: any;
    oncuechange?: any;
    oncut?: any;
    ondblclick?: any;
    ondrag?: any;
    ondragend?: any;
    ondragenter?: any;
    ondragleave?: any;
    ondragover?: any;
    ondragstart?: any;
    ondrop?: any;
    ondurationchange?: any;
    onemptied?: any;
    onended?: any;
    onerror?: any;
    onfocus?: any;
    onformdata?: any;
    onfullscreenchange?: any;
    onfullscreenerror?: any;
    ongotpointercapture?: any;
    oninput?: any;
    oninvalid?: any;
    onkeydown?: any;
    onkeypress?: any;
    onkeyup?: any;
    onload?: any;
    onloadeddata?: any;
    onloadedmetadata?: any;
    onloadstart?: any;
    onlostpointercapture?: any;
    onmousedown?: any;
    onmouseenter?: any;
    onmouseleave?: any;
    onmousemove?: any;
    onmouseout?: any;
    onmouseover?: any;
    onmouseup?: any;
    onmousewheel?: any;
    onpaste?: any;
    onpause?: any;
    onplay?: any;
    onplaying?: any;
    onpointercancel?: any;
    onpointerdown?: any;
    onpointerenter?: any;
    onpointerleave?: any;
    onpointermove?: any;
    onpointerout?: any;
    onpointerover?: any;
    onpointerrawupdate?: any;
    onpointerup?: any;
    onprogress?: any;
    onratechange?: any;
    onreset?: any;
    onresize?: any;
    onscroll?: any;
    onsearch?: any;
    onseeked?: any;
    onseeking?: any;
    onselect?: any;
    onselectionchange?: any;
    onselectstart?: any;
    onstalled?: any;
    onsubmit?: any;
    onsuspend?: any;
    ontimeupdate?: any;
    ontoggle?: any;
    ontransitioncancel?: any;
    ontransitionend?: any;
    ontransitionrun?: any;
    ontransitionstart?: any;
    onvolumechange?: any;
    onwaiting?: any;
    onwebkitanimationend?: any;
    onwebkitanimationiteration?: any;
    onwebkitanimationstart?: any;
    onwebkitfullscreenchange?: any;
    onwebkitfullscreenerror?: any;
    onwebkittransitionend?: any;
    onwheel?: any;
    outerHTML?: any;
    outerText?: any;
    ownerDocument?: any;
    parentElement?: any;
    parentNode?: any;
    part?: any;
    prefix?: any;
    previousElementSibling?: any;
    previousSibling?: any;
    scrollHeight?: any;
    scrollLeft?: any;
    scrollTop?: any;
    scrollWidth?: any;
    shadowRoot?: any;
    slot?: any;
    spellcheck?: any;
    style?: any;
    tabIndex?: any;
    tagName?: any;
    textContent?: any;
    title?: any;
    translate?: any;
}
